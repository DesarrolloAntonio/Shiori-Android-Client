name: Android CI

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > ${{ github.workspace }}/key_store.jks
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build app
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/key_store.jks
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      - name: Retrieve Version
        run: echo "APP_VERSION_NAME=$(grep '^versionName=' gradle.properties | cut -d'=' -f2)" >> $GITHUB_ENV
      - name: Check if Release Already Exists
        id: check_release
        run: |
          if gh release view v${{ env.APP_VERSION_NAME }}; then
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "release_exists=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release on GitHub
        if: env.release_exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.APP_VERSION_NAME }}
          name: Release - v${{ env.APP_VERSION_NAME }}
          generate_release_notes: true
          prerelease: false
          files: |
            presentation/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
