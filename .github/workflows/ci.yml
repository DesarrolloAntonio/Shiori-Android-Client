name: Android CI

on:
  push:
    branches:
      - master
      - develop
      - testing

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

  android_tests:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Start Emulator and Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          script: |
            adb devices
            ./gradlew connectedDebugAndroidTest

  build_and_release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [unit_tests, android_tests]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > ${{ github.workspace }}/key_store.jks

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build app
        run: ./gradlew assembleProductionRelease
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/key_store.jks
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: Retrieve Version
        run: echo "APP_VERSION_NAME=$(grep '^versionName=' gradle.properties | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Create Release on GitHub
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SHIORI_TOKEN }}
        with:
          tag_name: v${{ env.APP_VERSION_NAME }}
          name: Release - v${{ env.APP_VERSION_NAME }}
          generate_release_notes: true
          prerelease: false
          files: presentation/build/outputs/apk/production/release/*.apk